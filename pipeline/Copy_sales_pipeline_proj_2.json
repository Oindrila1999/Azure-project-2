{
	"name": "Copy_sales_pipeline_proj_2",
	"properties": {
		"activities": [
			{
				"name": "Copy_raw_to_processed",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "sales_source_herovired_proj_2",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "sales_dest_herovired_proj_2",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "TransformSalesData",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Copy_raw_to_processed",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/oindrilamoonmete1999@gmail.com/Herovired_Project_2/TransformSalesData",
					"baseParameters": {
						"StorageAccountName": {
							"value": "@pipeline().parameters.storage_acc",
							"type": "Expression"
						},
						"ContainerName": {
							"value": "@pipeline().parameters.container",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "PracticeDatabricksLS",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"storage_acc": {
				"type": "string"
			},
			"container": {
				"type": "string"
			}
		},
		"folder": {
			"name": "herovired_project"
		},
		"annotations": []
	}
}